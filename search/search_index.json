{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Introduction Technical setup Install Visual Studio Code from here Install folowing extensions in Visual Studio Code: Github Repositories (GitHub, Inc.) GitHub Copilot (GitHub Copilot) GitHub Actions (GitHub, Inc.) Python (Microsoft) Useful links Python Miniconda Documentation Google Colab How to use this repository Below are the steps you need to follow: Create a GitHub account if you don\u2019t have one. Fork this repository to your account. Enable the Issues tab: Go to the Settings tab and check the Issues option. Add your professor as a collaborator: Go to the Settings tab and add their GitHub username in the Collaborators section. Install python: Download Source Code & WWW GitHub repo WWW Where can I find the problems? Please visit the Mathematics Physics Lectures website. Physics Mathematics Discret Mathematics","title":"Introduction"},{"location":"#introduction","text":"","title":"Introduction"},{"location":"#technical-setup","text":"Install Visual Studio Code from here Install folowing extensions in Visual Studio Code: Github Repositories (GitHub, Inc.) GitHub Copilot (GitHub Copilot) GitHub Actions (GitHub, Inc.) Python (Microsoft)","title":"Technical setup"},{"location":"#useful-links","text":"Python Miniconda Documentation Google Colab","title":"Useful links"},{"location":"#how-to-use-this-repository","text":"Below are the steps you need to follow: Create a GitHub account if you don\u2019t have one. Fork this repository to your account. Enable the Issues tab: Go to the Settings tab and check the Issues option. Add your professor as a collaborator: Go to the Settings tab and add their GitHub username in the Collaborators section. Install python: Download Source Code & WWW GitHub repo WWW","title":"How to use this repository"},{"location":"#where-can-i-find-the-problems","text":"Please visit the Mathematics Physics Lectures website. Physics Mathematics Discret Mathematics","title":"Where can I find the problems?"},{"location":"1%20Physics/1%20Mechanics/Problem_1/","text":"Problem 1: Investigating the Range as a Function of the Angle of Projection 1. Theoretical Foundation Projectile motion follows from the basic equations of motion under constant acceleration. The equations of motion are: Horizontal motion : $$ x(t) = v_0 \\cos(\\theta) t $$ Vertical motion : $$ y(t) = v_0 \\sin(\\theta) t - \\frac{1}{2} g t^2 $$ To find the time of flight \\(t_f\\) , we set \\(y(t_f) = 0\\) (i.e., when the projectile hits the ground): \\[ 0 = v_0 \\sin(\\theta) t_f - \\frac{1}{2} g t_f^2 \\] Solving for \\(t_f\\) , we get: \\[ t_f = \\frac{2 v_0 \\sin(\\theta)}{g} \\] Substituting \\(t_f\\) into the equation for \\(x(t)\\) , we can find the horizontal range \\(R\\) : \\[ R = \\frac{v_0^2 \\sin(2\\theta)}{g} \\] This is the formula for the range of a projectile as a function of the launch angle \\(\\theta\\) . 2. Analysis of the Range From the derived equation for range: \\[ R(\\theta) = \\frac{v_0^2 \\sin(2\\theta)}{g} \\] We can see that the range depends on: - The initial velocity \\(v_0\\) , - The gravitational acceleration \\(g\\) , - The angle of projection \\(\\theta\\) . The sine of double the angle \\(\\sin(2\\theta)\\) gives a characteristic curve where the range is maximized when \\(\\theta = 45^\\circ\\) . If the initial velocity increases, the range increases proportionally. The range is inversely proportional to gravity; the higher the gravitational acceleration, the shorter the range. 3. Practical Applications In real-world situations, the model can be adapted for: - Uneven terrain : The launch angle might need to be adjusted for different elevations. - Air resistance : This introduces a drag force that slows down the projectile, especially at higher velocities. To account for these factors, more advanced models are required, such as: - Drag force models (e.g., quadratic drag for high velocities), - Simulation of motion on curved surfaces (e.g., hills). 4. Implementation ```python import numpy as np import matplotlib.pyplot as plt Constants g = 9.81 # Gravitational acceleration (m/s^2) v_0 = 20 # Initial velocity (m/s) Function to calculate range def calculate_range(v_0, theta, g): return (v_0**2 * np.sin(2 * np.radians(theta))) / g Angles for simulation (from 0 to 90 degrees) angles = np.linspace(0, 90, 500) Calculate ranges for each angle ranges = calculate_range(v_0, angles, g) Plot the range as a function of the angle plt.figure(figsize=(8, 6)) plt.plot(angles, ranges, label=f'v0 = {v_0} m/s', color='blue') plt.title(\"Range of a Projectile as a Function of the Launch Angle\") plt.xlabel(\"Launch Angle (degrees)\") plt.ylabel(\"Range (meters)\") plt.grid(True) plt.legend() plt.show()","title":"Problem 1"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#problem-1-investigating-the-range-as-a-function-of-the-angle-of-projection","text":"","title":"Problem 1: Investigating the Range as a Function of the Angle of Projection"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#1-theoretical-foundation","text":"Projectile motion follows from the basic equations of motion under constant acceleration. The equations of motion are: Horizontal motion : $$ x(t) = v_0 \\cos(\\theta) t $$ Vertical motion : $$ y(t) = v_0 \\sin(\\theta) t - \\frac{1}{2} g t^2 $$ To find the time of flight \\(t_f\\) , we set \\(y(t_f) = 0\\) (i.e., when the projectile hits the ground): \\[ 0 = v_0 \\sin(\\theta) t_f - \\frac{1}{2} g t_f^2 \\] Solving for \\(t_f\\) , we get: \\[ t_f = \\frac{2 v_0 \\sin(\\theta)}{g} \\] Substituting \\(t_f\\) into the equation for \\(x(t)\\) , we can find the horizontal range \\(R\\) : \\[ R = \\frac{v_0^2 \\sin(2\\theta)}{g} \\] This is the formula for the range of a projectile as a function of the launch angle \\(\\theta\\) .","title":"1. Theoretical Foundation"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#2-analysis-of-the-range","text":"From the derived equation for range: \\[ R(\\theta) = \\frac{v_0^2 \\sin(2\\theta)}{g} \\] We can see that the range depends on: - The initial velocity \\(v_0\\) , - The gravitational acceleration \\(g\\) , - The angle of projection \\(\\theta\\) . The sine of double the angle \\(\\sin(2\\theta)\\) gives a characteristic curve where the range is maximized when \\(\\theta = 45^\\circ\\) . If the initial velocity increases, the range increases proportionally. The range is inversely proportional to gravity; the higher the gravitational acceleration, the shorter the range.","title":"2. Analysis of the Range"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#3-practical-applications","text":"In real-world situations, the model can be adapted for: - Uneven terrain : The launch angle might need to be adjusted for different elevations. - Air resistance : This introduces a drag force that slows down the projectile, especially at higher velocities. To account for these factors, more advanced models are required, such as: - Drag force models (e.g., quadratic drag for high velocities), - Simulation of motion on curved surfaces (e.g., hills).","title":"3. Practical Applications"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#4-implementation","text":"```python import numpy as np import matplotlib.pyplot as plt","title":"4. Implementation"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#constants","text":"g = 9.81 # Gravitational acceleration (m/s^2) v_0 = 20 # Initial velocity (m/s)","title":"Constants"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#function-to-calculate-range","text":"def calculate_range(v_0, theta, g): return (v_0**2 * np.sin(2 * np.radians(theta))) / g","title":"Function to calculate range"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#angles-for-simulation-from-0-to-90-degrees","text":"angles = np.linspace(0, 90, 500)","title":"Angles for simulation (from 0 to 90 degrees)"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#calculate-ranges-for-each-angle","text":"ranges = calculate_range(v_0, angles, g)","title":"Calculate ranges for each angle"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#plot-the-range-as-a-function-of-the-angle","text":"plt.figure(figsize=(8, 6)) plt.plot(angles, ranges, label=f'v0 = {v_0} m/s', color='blue') plt.title(\"Range of a Projectile as a Function of the Launch Angle\") plt.xlabel(\"Launch Angle (degrees)\") plt.ylabel(\"Range (meters)\") plt.grid(True) plt.legend() plt.show()","title":"Plot the range as a function of the angle"},{"location":"1%20Physics/1%20Mechanics/Problem_2/","text":"1. Differential Equation for Forced Damped Pendulum The general form of the equation of motion for a forced damped pendulum is: \\[ \\theta''(t) + \\gamma \\theta'(t) + \\omega_0^2 \\sin(\\theta(t)) = A \\cos(\\omega t) \\] Where: - \\(\\theta(t)\\) is the angular displacement of the pendulum as a function of time. - \\(\\gamma\\) is the damping coefficient (measuring the rate of energy dissipation). - \\(\\omega_0\\) is the natural frequency of the pendulum (without damping or external driving force). - \\(A\\) is the amplitude of the external driving force. - \\(\\omega\\) is the driving frequency of the external force. 2. Small-Angle Approximation For small oscillations where \\(\\theta(t)\\) is small (usually in radians), we can make the approximation: \\[ \\sin(\\theta(t)) \\approx \\theta(t) \\] This leads to the simplified linear equation: \\[ \\theta''(t) + \\gamma \\theta'(t) + \\omega_0^2 \\theta(t) = A \\cos(\\omega t) \\] This is a second-order linear ordinary differential equation with constant coefficients, which is much easier to solve. 3. Solution for the Undamped, Unforced Case (Free Pendulum) For the case when there is no damping ( \\(\\gamma = 0\\) ) and no external driving force ( \\(A = 0\\) ), the equation simplifies to: \\[ \\theta''(t) + \\omega_0^2 \\theta(t) = 0 \\] This is a simple harmonic oscillator, and its solution is: \\[ \\theta(t) = \\theta_0 \\cos(\\omega_0 t + \\phi) \\] Where: - \\(\\theta_0\\) is the initial amplitude. - \\(\\phi\\) is the phase constant determined by initial conditions. 4. Solution for the Damped, Unforced Case (Damped Pendulum) When we add damping but no external forcing (i.e., \\(A = 0\\) ), the equation becomes: \\[ \\theta''(t) + \\gamma \\theta'(t) + \\omega_0^2 \\theta(t) = 0 \\] The solution to this equation depends on the value of the damping coefficient \\(\\gamma\\) . It can be categorized as: Underdamped ( \\(\\gamma^2 < 4 \\omega_0^2\\) )**: The pendulum oscillates with exponentially decaying amplitude. Critically damped ( \\(\\gamma^2 = 4 \\omega_0^2\\) ) : The pendulum returns to equilibrium as quickly as possible without oscillating. Overdamped ( \\(\\gamma^2 > 4 \\omega_0^2\\) ) : The pendulum returns to equilibrium without oscillating, but slower than in the critically damped case. The solution for the underdamped case is: \\[ \\theta(t) = \\theta_0 e^{-\\gamma t / 2} \\cos(\\omega_d t + \\phi) \\] Where: - \\(\\omega_d = \\sqrt{\\omega_0^2 - \\left(\\frac{\\gamma}{2}\\right)^2}\\) is the damped frequency. - \\(\\theta_0\\) and \\(\\phi\\) are determined by initial conditions. - The exponential term \\(e^{-\\gamma t / 2}\\) represents the decaying amplitude. 5. Forced, Undamped Case (Driven Pendulum) When there is no damping ( \\(\\gamma = 0\\) ), but there is an external driving force, the equation becomes: \\[ \\theta''(t) + \\omega_0^2 \\theta(t) = A \\cos(\\omega t) \\] The solution to this equation is: \\[ \\theta(t) = \\frac{A}{\\sqrt{(\\omega_0^2 - \\omega^2)^2 + (\\gamma \\omega)^2}} \\cos(\\omega t - \\delta) \\] Where: - \\(\\delta = \\tan^{-1}\\left(\\frac{\\gamma \\omega}{\\omega_0^2 - \\omega^2}\\right)\\) is the phase shift. - \\(A\\) is the driving amplitude. - \\(\\omega\\) is the driving frequency. - \\(\\omega_0\\) is the natural frequency of the pendulum. 6. Forced and Damped Case (Complete System) For the complete system with both damping and external driving force, the general solution is given by the combination of the transient and steady-state solutions: \\[ \\theta(t) = \\theta_{\\text{transient}}(t) + \\theta_{\\text{steady}}(t) \\] The transient part of the solution represents the initial conditions and will decay over time due to damping. The steady-state part of the solution represents the long-term behavior of the system, which oscillates with a constant amplitude at the driving frequency. For steady-state oscillations, the solution is: \\[ \\theta(t) = \\frac{A}{\\sqrt{(\\omega_0^2 - \\omega^2)^2 + (\\gamma \\omega)^2}} \\cos(\\omega t - \\delta) \\] This shows how the system responds to the periodic driving force in the long run. 7. Energy Considerations The total mechanical energy \\(E(t)\\) of the system is the sum of the kinetic energy and the potential energy: \\[ E(t) = \\frac{1}{2} m l^2 \\left( \\theta'(t)^2 + \\omega_0^2 \\theta(t)^2 \\right) \\] Where: - \\(m\\) is the mass of the pendulum. - \\(l\\) is the length of the pendulum. - \\(\\theta'(t)\\) is the angular velocity. - \\(\\theta(t)\\) is the angular displacement. For the forced damped pendulum, the energy fluctuates due to the energy supplied by the external driving force and the energy dissipated by damping. At resonance ( \\(\\omega = \\omega_0\\) ), the energy absorption is maximized. 8. Resonance and Frequency Response In resonance, the system oscillates with maximum amplitude. The resonance condition occurs when the driving frequency \\(\\omega\\) equals the natural frequency \\(\\omega_0\\) . In this case, the amplitude of the oscillations grows, which can be expressed as: \\[ \\theta_{\\text{max}} = \\frac{A}{\\gamma \\omega_0} \\] This shows that resonance can lead to large oscillations, especially if the damping is small. If the damping is large, the resonance effect is reduced. Summary of Key Formulas Undamped, Free Pendulum (Simple Harmonic Motion) : $$ \\theta(t) = \\theta_0 \\cos(\\omega_0 t + \\phi) $$ Damped, Free Pendulum : $$ \\theta(t) = \\theta_0 e^{-\\gamma t / 2} \\cos(\\omega_d t + \\phi) $$ Forced, Damped Pendulum : $$ \\theta(t) = \\frac{A}{\\sqrt{(\\omega_0^2 - \\omega^2)^2 + (\\gamma \\omega)^2}} \\cos(\\omega t - \\delta) $$ Energy : $$ E(t) = \\frac{1}{2} m l^2 \\left( \\theta'(t)^2 + \\omega_0^2 \\theta(t)^2 \\right) $$ Maximum Amplitude at Resonance : $$ \\theta_{\\text{max}} = \\frac{A}{\\gamma \\omega_0} $$ We'll use numerical methods to solve the differential equation for the forced damped pendulum. The script will use the solve_ivp function from SciPy to solve the system, and visualize the results with Matplotlib. Python Script for Simulating the Forced Damped Pendulum: import numpy as np import matplotlib.pyplot as plt from scipy.integrate import solve_ivp # Parameters gamma = 0.2 # Damping coefficient (can adjust for underdamped, overdamped cases) omega_0 = 2 # Natural frequency (rad/s) A = 1 # Amplitude of the driving force omega = 1.8 # Frequency of the driving force (change to test resonance behavior) t_span = (0, 100) # Time span for the simulation initial_conditions = [0.5, 0] # Initial conditions: [theta(0), theta'(0)] # Differential equation for the forced damped pendulum def forced_damped_pendulum(t, y): theta, theta_dot = y dtheta_dt = theta_dot dtheta_dot_dt = -gamma * theta_dot - omega_0**2 * np.sin(theta) + A * np.cos(omega * t) return [dtheta_dt, dtheta_dot_dt] # Solve the differential equation using Runge-Kutta method (via solve_ivp) solution = solve_ivp(forced_damped_pendulum, t_span, initial_conditions, t_eval=np.linspace(0, 100, 10000)) # Extract solution t = solution.t theta = solution.y[0] theta_dot = solution.y[1] # Plotting the solution: Angular displacement vs. Time plt.figure(figsize=(10, 6)) plt.plot(t, theta) plt.title('Forced Damped Pendulum Motion') plt.xlabel('Time (s)') plt.ylabel('Angular Displacement (rad)') plt.grid(True) plt.show() # Plotting the Phase Portrait: theta vs. theta' plt.figure(figsize=(8, 6)) plt.plot(theta, theta_dot) plt.title('Phase Portrait of the Forced Damped Pendulum') plt.xlabel('Theta (rad)') plt.ylabel('Theta\\' (rad/s)') plt.grid(True) plt.show() # Frequency Response: The steady-state amplitude vs driving frequency (if needed) # This could involve running simulations for different values of omega and plotting the resulting amplitude. def compute_amplitude(omega_values): amplitudes = [] for omega_val in omega_values: # Update the global omega global omega omega = omega_val solution = solve_ivp(forced_damped_pendulum, t_span, initial_conditions, t_eval=np.linspace(0, 100, 10000)) amplitudes.append(np.max(np.abs(solution.y[0]))) # Maximum amplitude observed in the solution return amplitudes omega_values = np.linspace(0.5, 2.5, 100) # Driving frequency range amplitudes = compute_amplitude(omega_values) # Plot Frequency Response plt.figure(figsize=(10, 6)) plt.plot(omega_values, amplitudes) plt.title('Frequency Response of the Forced Damped Pendulum') plt.xlabel('Driving Frequency (omega)') plt.ylabel('Maximum Amplitude (rad)') plt.grid(True) plt.show() Explanation of the Python Code : Parameters : gamma : Damping coefficient, controlling the rate at which energy is dissipated from the system. omega_0 : Natural frequency of the pendulum. A : Amplitude of the driving force. omega : Driving frequency of the external force. initial_conditions : The initial angular displacement ( \\(\\theta(0)\\) ) and angular velocity ( \\(\\theta'(0)\\) ). Forced Damped Pendulum Differential Equation : The function forced_damped_pendulum(t, y) represents the system of ordinary differential equations: $$ \\theta''(t) + \\gamma \\theta'(t) + \\omega_0^2 \\sin(\\theta(t)) = A \\cos(\\omega t) $$ We return the derivatives of \\(\\theta(t)\\) and \\(\\theta'(t)\\) in this function for numerical integration.","title":"Problem 2"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#1-differential-equation-for-forced-damped-pendulum","text":"The general form of the equation of motion for a forced damped pendulum is: \\[ \\theta''(t) + \\gamma \\theta'(t) + \\omega_0^2 \\sin(\\theta(t)) = A \\cos(\\omega t) \\] Where: - \\(\\theta(t)\\) is the angular displacement of the pendulum as a function of time. - \\(\\gamma\\) is the damping coefficient (measuring the rate of energy dissipation). - \\(\\omega_0\\) is the natural frequency of the pendulum (without damping or external driving force). - \\(A\\) is the amplitude of the external driving force. - \\(\\omega\\) is the driving frequency of the external force.","title":"1. Differential Equation for Forced Damped Pendulum"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#2-small-angle-approximation","text":"For small oscillations where \\(\\theta(t)\\) is small (usually in radians), we can make the approximation: \\[ \\sin(\\theta(t)) \\approx \\theta(t) \\] This leads to the simplified linear equation: \\[ \\theta''(t) + \\gamma \\theta'(t) + \\omega_0^2 \\theta(t) = A \\cos(\\omega t) \\] This is a second-order linear ordinary differential equation with constant coefficients, which is much easier to solve.","title":"2. Small-Angle Approximation"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#3-solution-for-the-undamped-unforced-case-free-pendulum","text":"For the case when there is no damping ( \\(\\gamma = 0\\) ) and no external driving force ( \\(A = 0\\) ), the equation simplifies to: \\[ \\theta''(t) + \\omega_0^2 \\theta(t) = 0 \\] This is a simple harmonic oscillator, and its solution is: \\[ \\theta(t) = \\theta_0 \\cos(\\omega_0 t + \\phi) \\] Where: - \\(\\theta_0\\) is the initial amplitude. - \\(\\phi\\) is the phase constant determined by initial conditions.","title":"3. Solution for the Undamped, Unforced Case (Free Pendulum)"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#4-solution-for-the-damped-unforced-case-damped-pendulum","text":"When we add damping but no external forcing (i.e., \\(A = 0\\) ), the equation becomes: \\[ \\theta''(t) + \\gamma \\theta'(t) + \\omega_0^2 \\theta(t) = 0 \\] The solution to this equation depends on the value of the damping coefficient \\(\\gamma\\) . It can be categorized as: Underdamped ( \\(\\gamma^2 < 4 \\omega_0^2\\) )**: The pendulum oscillates with exponentially decaying amplitude. Critically damped ( \\(\\gamma^2 = 4 \\omega_0^2\\) ) : The pendulum returns to equilibrium as quickly as possible without oscillating. Overdamped ( \\(\\gamma^2 > 4 \\omega_0^2\\) ) : The pendulum returns to equilibrium without oscillating, but slower than in the critically damped case. The solution for the underdamped case is: \\[ \\theta(t) = \\theta_0 e^{-\\gamma t / 2} \\cos(\\omega_d t + \\phi) \\] Where: - \\(\\omega_d = \\sqrt{\\omega_0^2 - \\left(\\frac{\\gamma}{2}\\right)^2}\\) is the damped frequency. - \\(\\theta_0\\) and \\(\\phi\\) are determined by initial conditions. - The exponential term \\(e^{-\\gamma t / 2}\\) represents the decaying amplitude.","title":"4. Solution for the Damped, Unforced Case (Damped Pendulum)"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#5-forced-undamped-case-driven-pendulum","text":"When there is no damping ( \\(\\gamma = 0\\) ), but there is an external driving force, the equation becomes: \\[ \\theta''(t) + \\omega_0^2 \\theta(t) = A \\cos(\\omega t) \\] The solution to this equation is: \\[ \\theta(t) = \\frac{A}{\\sqrt{(\\omega_0^2 - \\omega^2)^2 + (\\gamma \\omega)^2}} \\cos(\\omega t - \\delta) \\] Where: - \\(\\delta = \\tan^{-1}\\left(\\frac{\\gamma \\omega}{\\omega_0^2 - \\omega^2}\\right)\\) is the phase shift. - \\(A\\) is the driving amplitude. - \\(\\omega\\) is the driving frequency. - \\(\\omega_0\\) is the natural frequency of the pendulum.","title":"5. Forced, Undamped Case (Driven Pendulum)"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#6-forced-and-damped-case-complete-system","text":"For the complete system with both damping and external driving force, the general solution is given by the combination of the transient and steady-state solutions: \\[ \\theta(t) = \\theta_{\\text{transient}}(t) + \\theta_{\\text{steady}}(t) \\] The transient part of the solution represents the initial conditions and will decay over time due to damping. The steady-state part of the solution represents the long-term behavior of the system, which oscillates with a constant amplitude at the driving frequency. For steady-state oscillations, the solution is: \\[ \\theta(t) = \\frac{A}{\\sqrt{(\\omega_0^2 - \\omega^2)^2 + (\\gamma \\omega)^2}} \\cos(\\omega t - \\delta) \\] This shows how the system responds to the periodic driving force in the long run.","title":"6. Forced and Damped Case (Complete System)"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#7-energy-considerations","text":"The total mechanical energy \\(E(t)\\) of the system is the sum of the kinetic energy and the potential energy: \\[ E(t) = \\frac{1}{2} m l^2 \\left( \\theta'(t)^2 + \\omega_0^2 \\theta(t)^2 \\right) \\] Where: - \\(m\\) is the mass of the pendulum. - \\(l\\) is the length of the pendulum. - \\(\\theta'(t)\\) is the angular velocity. - \\(\\theta(t)\\) is the angular displacement. For the forced damped pendulum, the energy fluctuates due to the energy supplied by the external driving force and the energy dissipated by damping. At resonance ( \\(\\omega = \\omega_0\\) ), the energy absorption is maximized.","title":"7. Energy Considerations"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#8-resonance-and-frequency-response","text":"In resonance, the system oscillates with maximum amplitude. The resonance condition occurs when the driving frequency \\(\\omega\\) equals the natural frequency \\(\\omega_0\\) . In this case, the amplitude of the oscillations grows, which can be expressed as: \\[ \\theta_{\\text{max}} = \\frac{A}{\\gamma \\omega_0} \\] This shows that resonance can lead to large oscillations, especially if the damping is small. If the damping is large, the resonance effect is reduced.","title":"8. Resonance and Frequency Response"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#summary-of-key-formulas","text":"Undamped, Free Pendulum (Simple Harmonic Motion) : $$ \\theta(t) = \\theta_0 \\cos(\\omega_0 t + \\phi) $$ Damped, Free Pendulum : $$ \\theta(t) = \\theta_0 e^{-\\gamma t / 2} \\cos(\\omega_d t + \\phi) $$ Forced, Damped Pendulum : $$ \\theta(t) = \\frac{A}{\\sqrt{(\\omega_0^2 - \\omega^2)^2 + (\\gamma \\omega)^2}} \\cos(\\omega t - \\delta) $$ Energy : $$ E(t) = \\frac{1}{2} m l^2 \\left( \\theta'(t)^2 + \\omega_0^2 \\theta(t)^2 \\right) $$ Maximum Amplitude at Resonance : $$ \\theta_{\\text{max}} = \\frac{A}{\\gamma \\omega_0} $$ We'll use numerical methods to solve the differential equation for the forced damped pendulum. The script will use the solve_ivp function from SciPy to solve the system, and visualize the results with Matplotlib.","title":"Summary of Key Formulas"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#python-script-for-simulating-the-forced-damped-pendulum","text":"import numpy as np import matplotlib.pyplot as plt from scipy.integrate import solve_ivp # Parameters gamma = 0.2 # Damping coefficient (can adjust for underdamped, overdamped cases) omega_0 = 2 # Natural frequency (rad/s) A = 1 # Amplitude of the driving force omega = 1.8 # Frequency of the driving force (change to test resonance behavior) t_span = (0, 100) # Time span for the simulation initial_conditions = [0.5, 0] # Initial conditions: [theta(0), theta'(0)] # Differential equation for the forced damped pendulum def forced_damped_pendulum(t, y): theta, theta_dot = y dtheta_dt = theta_dot dtheta_dot_dt = -gamma * theta_dot - omega_0**2 * np.sin(theta) + A * np.cos(omega * t) return [dtheta_dt, dtheta_dot_dt] # Solve the differential equation using Runge-Kutta method (via solve_ivp) solution = solve_ivp(forced_damped_pendulum, t_span, initial_conditions, t_eval=np.linspace(0, 100, 10000)) # Extract solution t = solution.t theta = solution.y[0] theta_dot = solution.y[1] # Plotting the solution: Angular displacement vs. Time plt.figure(figsize=(10, 6)) plt.plot(t, theta) plt.title('Forced Damped Pendulum Motion') plt.xlabel('Time (s)') plt.ylabel('Angular Displacement (rad)') plt.grid(True) plt.show() # Plotting the Phase Portrait: theta vs. theta' plt.figure(figsize=(8, 6)) plt.plot(theta, theta_dot) plt.title('Phase Portrait of the Forced Damped Pendulum') plt.xlabel('Theta (rad)') plt.ylabel('Theta\\' (rad/s)') plt.grid(True) plt.show() # Frequency Response: The steady-state amplitude vs driving frequency (if needed) # This could involve running simulations for different values of omega and plotting the resulting amplitude. def compute_amplitude(omega_values): amplitudes = [] for omega_val in omega_values: # Update the global omega global omega omega = omega_val solution = solve_ivp(forced_damped_pendulum, t_span, initial_conditions, t_eval=np.linspace(0, 100, 10000)) amplitudes.append(np.max(np.abs(solution.y[0]))) # Maximum amplitude observed in the solution return amplitudes omega_values = np.linspace(0.5, 2.5, 100) # Driving frequency range amplitudes = compute_amplitude(omega_values) # Plot Frequency Response plt.figure(figsize=(10, 6)) plt.plot(omega_values, amplitudes) plt.title('Frequency Response of the Forced Damped Pendulum') plt.xlabel('Driving Frequency (omega)') plt.ylabel('Maximum Amplitude (rad)') plt.grid(True) plt.show()","title":"Python Script for Simulating the Forced Damped Pendulum:"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#explanation-of-the-python-code","text":"Parameters : gamma : Damping coefficient, controlling the rate at which energy is dissipated from the system. omega_0 : Natural frequency of the pendulum. A : Amplitude of the driving force. omega : Driving frequency of the external force. initial_conditions : The initial angular displacement ( \\(\\theta(0)\\) ) and angular velocity ( \\(\\theta'(0)\\) ). Forced Damped Pendulum Differential Equation : The function forced_damped_pendulum(t, y) represents the system of ordinary differential equations: $$ \\theta''(t) + \\gamma \\theta'(t) + \\omega_0^2 \\sin(\\theta(t)) = A \\cos(\\omega t) $$ We return the derivatives of \\(\\theta(t)\\) and \\(\\theta'(t)\\) in this function for numerical integration.","title":"Explanation of the Python Code:"},{"location":"1%20Physics/2%20Gravity/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/2%20Gravity/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/2%20Gravity/Problem_2/","text":"Problem 2","title":"Problem 2"},{"location":"1%20Physics/2%20Gravity/Problem_2/#problem-2","text":"","title":"Problem 2"},{"location":"1%20Physics/2%20Gravity/Problem_3/","text":"Problem 3","title":"Problem 3"},{"location":"1%20Physics/2%20Gravity/Problem_3/#problem-3","text":"","title":"Problem 3"},{"location":"1%20Physics/3%20Waves/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/3%20Waves/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/4%20Electromagnetism/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/4%20Electromagnetism/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/5%20Circuits/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/5%20Circuits/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/6%20Statistics/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/6%20Statistics/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/6%20Statistics/Problem_2/","text":"Problem 2","title":"Problem 2"},{"location":"1%20Physics/6%20Statistics/Problem_2/#problem-2","text":"","title":"Problem 2"},{"location":"1%20Physics/7%20Measurements/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/7%20Measurements/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"2%20Mathematics/1%20Linear_algebra/","text":"Linear Algebra","title":"Linear Algebra"},{"location":"2%20Mathematics/1%20Linear_algebra/#linear-algebra","text":"","title":"Linear Algebra"},{"location":"2%20Mathematics/2%20Analytic_geometry/","text":"Analytic geometry","title":"Analytic geometry"},{"location":"2%20Mathematics/2%20Analytic_geometry/#analytic-geometry","text":"","title":"Analytic geometry"},{"location":"2%20Mathematics/3%20Calculus/","text":"Calculus","title":"Calculus"},{"location":"2%20Mathematics/3%20Calculus/#calculus","text":"","title":"Calculus"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_02%20Set_Theory/","text":"Set Theory","title":"Set Theory"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_02%20Set_Theory/#set-theory","text":"","title":"Set Theory"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_03%20Relations/","text":"Relations","title":"Relations"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_03%20Relations/#relations","text":"","title":"Relations"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_04%20Functions/","text":"Functions","title":"Functions"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_04%20Functions/#functions","text":"","title":"Functions"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_05%20Combinatorics/","text":"Combinatorics","title":"Combinatorics"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_05%20Combinatorics/#combinatorics","text":"","title":"Combinatorics"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_08%20Number_Theory/","text":"Number Theory","title":"Number Theory"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_08%20Number_Theory/#number-theory","text":"","title":"Number Theory"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_06%20Sequences_and_Series/","text":"Sequences and Series","title":"Sequences and Series"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_06%20Sequences_and_Series/#sequences-and-series","text":"","title":"Sequences and Series"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_07%20Induction/","text":"Induction","title":"Induction"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_07%20Induction/#induction","text":"","title":"Induction"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_09%20Recurrence/","text":"Recurrence","title":"Recurrence"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_09%20Recurrence/#recurrence","text":"","title":"Recurrence"},{"location":"3%20Discret_Mathematics/4%20Graph%20Theory%20and%20.../_10%20Graph_Theory/","text":"Graph Theory","title":"Graph Theory"},{"location":"3%20Discret_Mathematics/4%20Graph%20Theory%20and%20.../_10%20Graph_Theory/#graph-theory","text":"","title":"Graph Theory"},{"location":"3%20Discret_Mathematics/5%20Logic/_01%20Logic/","text":"Logic","title":"Logic"},{"location":"3%20Discret_Mathematics/5%20Logic/_01%20Logic/#logic","text":"","title":"Logic"}]}